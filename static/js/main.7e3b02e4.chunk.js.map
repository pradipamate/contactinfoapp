{"version":3,"sources":["practice/actions/ContactinfoAction.js","App.js","serviceWorker.js","practice/reducers/ContactinfoReducer.js","practice/reducers/RootReducer.js","index.js","practice/store/store.js"],"names":["Addcontact","value","type","payload","updated","validEmailRegex","RegExp","validfullnameregex","validphonenumberregex","validateForm","errors","valid","Object","values","forEach","val","length","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","AddInfoHandler","setState","Addcontactmodal","state","modalClosehandle","event","editcontactmodal","viewcontactmodal","changehandler","_event$target","target","name","fullname","test","email","phonenumber","companyname","address","defineProperty","Updatechangehandler","_event$target2","submithandler","preventDefault","data","id","uuid","v4","dispatch","alert","Edithandler","edit_id","Listdata","find","item","editid","updated_submithandler","newdata","Taskdataview","Requestviewdata","bind","assertThisInitialized","_this2","AvailableData","AllTaskList","map","react_default","a","createElement","key","className","onClick","Button","variant","aria-hidden","Container","fluid","Row","Col","sm","xs","Table","striped","hover","responsive","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","Label","Control","onChange","required","as","rows","placeholder","column","plaintext","readOnly","Component","connect","ContactInfo","Boolean","window","location","hostname","match","TaskBook","combineReducers","arguments","undefined","action","concat","toConsumableArray","EditData","Data","store","createStore","rootreducer","applyMiddleware","thunk","jsx","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e3b02e4.chunk.js","sourcesContent":["export const Addcontact = (value) => ({\n  type: \"ADD_LIST\",\n  payload: value,\n});\nexport const updated = (value) => ({\n  type: \"FOR_UPDATED\",\n  payload: value,\n});\n\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport {Addcontact,updated} from \"./practice/actions/ContactinfoAction\";\nimport {Col,Button, Container, Row,Form,Modal,Table,} from \"react-bootstrap\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { connect } from \"react-redux\";\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validfullnameregex = /^[a-zA-Z ]*$/;\nconst validphonenumberregex = /^[0]?[789]\\d{9}$/;\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      companyname:\"\",address:\"\",\n      editid: \"\",\n      errors: { fullname: \"\", email: \"\", phonenumber: \"\", companyname: \"\",address: \"\" },\n      Addcontactmodal: false,\n      editcontactmodal: false,\n      viewcontactmodal: false,\n    };\n\n    this.submithandler = this.submithandler.bind(this);\n    this.Edithandler = this.Edithandler.bind(this);\n    this.AddInfoHandler = this.AddInfoHandler.bind(this);\n    this.modalClosehandle = this.modalClosehandle.bind(this);\n    this.Taskdataview = this.Taskdataview.bind(this);\n  }\n\n  AddInfoHandler = () => {\n    this.setState({\n      Addcontactmodal: !this.state.Addcontactmodal,\n    });\n  };\n\n  modalClosehandle = (event) => {\n    this.setState({\n      Addcontactmodal: false,\n      editcontactmodal: false,\n      viewcontactmodal: false,\n    });\n  };\n\n  // for add Contact handler//\n  changehandler = (event) => {\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch(name) {\n        case 'fullname': \n        errors.fullname = validfullnameregex.test(value)? '' : 'Only Accept Characters !';\n        break;\n        case 'email':\n        errors.email = validEmailRegex.test(value)? '': 'Email is not valid!';\n        break;\n        case 'phonenumber':\n        errors.phonenumber = validphonenumberregex.test(value)? '' : 'Phone Number is not valid!';\n        break;\n        case 'companyname': \n        errors.companyname = value.length < 0 ? 'Enter Company Name' : '';\n        break;\n        case 'address': \n        errors.address = value.length < 0 ? 'enter Address' : '';\n        break;\n        default:\n        break;\n    }\n    \n    this.setState({\n      errors,[name]:value,\n    });\n\n  };\n\n\n  //  updates change handler//\n  Updatechangehandler = (event) => { \n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch(name) {\n        case 'fullname': \n        errors.fullname = validfullnameregex.test(value)? '': 'Only Accept Characters !';\n        break;\n        case 'email':\n        errors.email = validEmailRegex.test(value)? '': 'Email is not valid!';\n        break;\n        case 'phonenumber': \n        errors.phonenumber = validphonenumberregex.test(value) ? '' : 'Phone Number is not valid!';\n        break;\n        case 'companyname':\n         errors.companyname = value.length < 0 ? 'Enter Company Name' : '';\n        break;\n        case 'address':\n        errors.address = value.length < 0 ? 'enter Address' : '';\n        break;\n        default:\n        break;\n    }\n    this.setState({\n      errors,[name]:value,\n    });\n\n  };\n\n\n  // for submit contact Info//\n  submithandler = (event) => {\n    event.preventDefault();\n      this.setState({\n        Addcontactmodal:!this.state.Addcontactmodal,\n      });\n\n    if(validateForm(this.state.errors)) {\n            if (this.state !== \"\") {\n              var data = {};\n              data.fullname = this.state.fullname; \n              data.email = this.state.email; \n              data.companyname = this.state.companyname;\n              data.phonenumber = this.state.phonenumber;\n              data.address=this.state.address;\n              data.id = uuid.v4();\n              this.props.dispatch(Addcontact(data));\n              this.setState({ fullname: \"\",email: \"\",phonenumber: \"\",companyname:\"\",address:\"\" });\n             }\n          } \n     else {\n          alert(\"Please Fill All Information\");\n          this.setState({\n              Addcontactmodal:true\n          })\n       }\n  };\n\n  Edithandler = (event) => {\n    var edit_id = event.target.id;\n    const data = this.props.Listdata.find((item) => item.id === edit_id);\n    this.setState({\n      editcontactmodal: !this.state.editcontactmodal,\n      editid: edit_id,\n      fullname: data.fullname, \n      email: data.email,\n      phonenumber: data.phonenumber,\n      companyname: data.companyname,\n      address: data.address,\n    });\n  };\n\n  updated_submithandler = (event) => {\n    event.preventDefault();\n    this.setState({\n      editcontactmodal: !this.state.editcontactmodal,\n    });\n    if (this.state!== \"\") {\n      var newdata = {};\n      newdata.id = this.state.editid; \n      newdata.fullname = this.state.fullname;\n      newdata.email = this.state.email; \n      newdata.address = this.state.address;\n      newdata.companyname = this.state.companyname;\n      newdata.phonenumber = this.state.phonenumber;\n      this.props.dispatch(updated(newdata));\n    }\n  };\n\n  Taskdataview = (id) => {\n    var Requestviewdata = this.props.Listdata.find((item) => item.id===id);\n    this.setState({\n      viewcontactmodal: !this.state.viewcontactmodal,\n      fullname: Requestviewdata.fullname,\n      email: Requestviewdata.email,companyname: Requestviewdata.companyname,\n      phonenumber: Requestviewdata.phonenumber,address: Requestviewdata.address\n    });\n  };\n  \n\n  render() {\n    const {errors} = this.state;\n    var AvailableData = this.props.Listdata;\n    if (AvailableData !== null) {\n      var AllTaskList = AvailableData.map((item) => (\n        <tr key={item.id}>\n            <td><span className=\"username\" onClick={() => this.Taskdataview(item.id)}>{item.fullname}</span> <br/> <span className=\"defalut\">{item.email}</span></td>\n            <td>{item.companyname}</td>\n            <td>{item.phonenumber}</td>\n            <td>{item.address}</td>\n            <td><Button variant=\"primary mr-2 \"> <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" id={item.id} onClick={this.Edithandler} ></i></Button> </td>\n        </tr>\n      ));\n    }\n    return (\n      <div>\n        <Container fluid={true}>\n            <Row className=\"startrow\">\n              <Col sm={12} xs={12}  className=\"view\" className=\"text-right\">\n                <Button variant=\"success\" className=\"themesflat-button \"  onClick={this.AddInfoHandler}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Contact </Button>\n              </Col>\n            </Row>\n            <Row>\n             <Col xs={12} sm={12}>\n                <div className=\"TaskList\">\n                        <Table striped hover responsive>\n                          <thead>\n                            <tr className=\"thead\">\n                              <th>Basic Info</th>\n                              <th>Company Name</th>\n                              <th>Phone Number</th>\n                              <th>Address</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                           <tbody>{AllTaskList}</tbody>\n                       </Table>\n               </div>\n\n          <Modal show={this.state.Addcontactmodal} onHide={this.modalClosehandle}  >\n              <Modal.Header closeButton  >\n                  <Modal.Title>Add Contact</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.submithandler}>\n                    <Row>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label>Full name</Form.Label>\n                          <Form.Control type=\"text\" onChange={this.changehandler} name=\"fullname\"  required />\n                             {errors.fullname.length > 0 && <span className=\"text-danger\">{errors.fullname}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Email</Form.Label>\n                          <Form.Control type=\"email\" onChange={this.changehandler} name=\"email\" required />\n                             {errors.email.length > 0 && <span className=\"text-danger\">{errors.email}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Phone number</Form.Label>\n                          <Form.Control type=\"text\" onChange={this.changehandler} name=\"phonenumber\" required />\n                             {errors.phonenumber.length > 0 && <span className=\"text-danger\">{errors.phonenumber}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Company Name</Form.Label>\n                          <Form.Control type=\"text\" onChange={this.changehandler} name=\"companyname\" required />\n                             {errors.companyname.length > 0 && <span className=\"text-danger\">{errors.companyname}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group>\n                           <Form.Label> Address</Form.Label>\n                             <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Address\" onChange={this.changehandler} name=\"address\"  required />\n                              {errors.address.length > 0 && <span className=\"text-danger\">{errors.address}</span>}\n                         </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group className=\"text-right\">\n                          <Button variant=\"secondary\" type=\"submit\"  className=\"themesflat-button blue mr-2\"  onClick={this.modalClosehandle}> Cancel </Button>\n                          <Button variant=\"success\" type=\"submit\"  className=\"themesflat-button blue\">  Save Changes </Button>\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          \n            <Modal show={this.state.editcontactmodal} onHide={this.modalClosehandle}>\n              <Modal.Header closeButton >\n                <Modal.Title>Edit Contact </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.updated_submithandler}>\n                    <Row>\n                      <Col sm={12}>\n                        <Form.Control type=\"hidden\"name=\"id\" value={this.state.edit_id}/>\n                        <Form.Group >\n                          <Form.Label>Full Name</Form.Label>\n                          <Form.Control type=\"text\"  onChange={this.Updatechangehandler} name=\"fullname\"  value={this.state.fullname}  required />\n                                  {errors.fullname.length > 0 && <span className=\"text-danger\">{errors.fullname}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Email</Form.Label>\n                          <Form.Control type=\"email\"  onChange={this.Updatechangehandler}  name=\"email\"  value={this.state.email}  required />\n                                {errors.email.length > 0 && <span className=\"text-danger\">{errors.email}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Company Name</Form.Label>\n                          <Form.Control  type=\"text\" onChange={this.Updatechangehandler}  name=\"companyname\"  value={this.state.companyname}  required />\n                            {errors.companyname.length > 0 && <span className=\"text-danger\">{errors.companyname}</span>}\n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group >\n                          <Form.Label> Phone Number</Form.Label>\n                          <Form.Control  type=\"text\" onChange={this.Updatechangehandler}  name=\"phonenumber\"  value={this.state.phonenumber}  required />\n                          {errors.phonenumber.length > 0 && <span className=\"text-danger\">{errors.phonenumber}</span>} \n                        </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group>\n                           <Form.Label> Address</Form.Label>\n                             <Form.Control as=\"textarea\" rows=\"5\"  onChange={this.Updatechangehandler} name=\"address\"  value={this.state.address}  required />\n                             {errors.address.length > 0 && <span className=\"text-danger\">{errors.address}</span>} \n                         </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group className=\"text-right\">\n                          <Button  variant=\"secondary\"  className=\"themesflat-button blue mr-2\"  onClick={this.modalClosehandle}> Cancel </Button>\n                          <Button  variant=\"success\"  type=\"submit\"  className=\"themesflat-button blue\"> Save </Button>\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n         \n            <Modal  className=\"viewmodal\" show={this.state.viewcontactmodal} onHide={this.modalClosehandle}>\n              <Modal.Header closeButton >\n                <Modal.Title className=\"view\">View Contact Info</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n                    <Row>\n                      <Col sm={12}>\n                          <Form.Group as={Row} >\n                              <Form.Label column sm=\"6\">Fullname : </Form.Label>\n                              <Col sm=\"6\">\n                                  <Form.Control plaintext readOnly  value={this.state.fullname} readOnly/>\n                              </Col>\n                         </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                         <Form.Group as={Row} >\n                              <Form.Label column sm=\"6\">Email :</Form.Label>\n                              <Col sm=\"6\">\n                                  <Form.Control plaintext readOnly  value={this.state.email} readOnly/>\n                              </Col>\n                         </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                         <Form.Group as={Row} >\n                                <Form.Label column sm=\"6\">Company Name : </Form.Label>\n                                <Col sm=\"6\">\n                                    <Form.Control plaintext readOnly  value={this.state.companyname} readOnly/>\n                                </Col>\n                          </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                          <Form.Group as={Row} >\n                                <Form.Label column sm=\"6\">Phone Number : </Form.Label>\n                                <Col sm=\"6\">\n                                    <Form.Control plaintext readOnly  value={this.state.phonenumber} readOnly/>\n                                </Col>\n                          </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group as={Row} >\n                                <Form.Label column sm=\"6\">Address : </Form.Label>\n                                <Col sm=\"6\">\n                                    <Form.Control plaintext readOnly  value={this.state.address} readOnly/>\n                                </Col>\n                          </Form.Group>\n                      </Col>\n                      <Col sm={12}>\n                        <Form.Group className=\"text-right\">\n                          <Button variant=\"secondary\" className=\"themesflat-button blue mr-2\" onClick={this.modalClosehandle} > Cancel </Button>\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          </Col>\n        </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    Listdata: state.ContactInfo,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const TaskBook = [];\n\nexport default (state = TaskBook, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n    return [...state, action.payload];\n\n    case \"FOR_UPDATED\":\n        let EditData = action.payload;\n        const Data = state.find((item) => item.id === EditData.id);\n        Data.fullname = EditData.fullname;\n        Data.email = EditData.email;\n        Data.phonenumber = EditData.phonenumber;\n        Data.companyname = EditData.companyname;\n        Data.address = EditData.address;\n        return [...state];\n\n    default:\n      return state;\n  }\n};\n\n","import ContactinfoReducer from './ContactinfoReducer';\nimport {combineReducers} from 'redux';\n\nexport default combineReducers({\n    ContactInfo:ContactinfoReducer,\n    \n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Mystore from './practice/store/store';\nimport {Provider} from 'react-redux';\n\nconst store = Mystore();\n\nconst jsx= (\n    <Provider store={store}>\n       <App />          \n    </Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const element=<h1>welcome to Website</h1>\n\n// ReactDOM.render(element,document.getElementById('root'));","import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootreducer from '../reducers/RootReducer';\n\n\nexport default()=>{\n    const store = createStore(rootreducer,applyMiddleware(thunk));\n    return store;\n}\n\n"],"sourceRoot":""}